/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Swagger Petstore
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.example.chotuve_android_client.apis

import com.example.chotuve_android_client.models.Order
import io.reactivex.Completable
import io.reactivex.Single
import retrofit2.http.DELETE
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface StoreApi {
    /**
     * Delete purchase order by ID
     * For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
     * The endpoint is owned by defaultname service owner
     * @param orderId ID of the order that needs to be deleted (required)
     */
    @Headers(
        "X-Operation-ID: deleteOrder"
    )
    @DELETE("store/order/{orderId}")
    fun deleteOrder(
        @retrofit2.http.Path("orderId") orderId: Long
    ): Completable
    /**
     * Returns pet inventories by status
     * Returns a map of status codes to quantities
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "X-Operation-ID: getInventory"
    )
    @GET("store/inventory")
    fun getInventory(): Single<Map<String, Int>>
    /**
     * Find purchase order by ID
     * For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
     * The endpoint is owned by defaultname service owner
     * @param orderId ID of pet that needs to be fetched (required)
     */
    @Headers(
        "X-Operation-ID: getOrderById"
    )
    @GET("store/order/{orderId}")
    fun getOrderById(
        @retrofit2.http.Path("orderId") orderId: Long
    ): Single<Order>
    /**
     * Place an order for a pet
     * 
     * The endpoint is owned by defaultname service owner
     * @param body order placed for purchasing the pet (required)
     */
    @Headers(
        "X-Operation-ID: placeOrder",
      "Content-Type: application/json"
    )
    @POST("store/order")
    fun placeOrder(
        @retrofit2.http.Body body: Order
    ): Single<Order>
}
